% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_hotspots.R
\name{find_hotspots}
\alias{find_hotspots}
\title{Find Spatial Hotspots in Geographic Data}
\usage{
find_hotspots(
  data,
  lat_col,
  lon_col,
  name_col = NULL,
  bandwidth = "auto",
  grid_size = 50,
  threshold = 0.8
)
}
\arguments{
\item{data}{A data.frame containing coordinate data}

\item{lat_col}{Character string specifying the name of the latitude column}

\item{lon_col}{Character string specifying the name of the longitude column}

\item{name_col}{Character string specifying the name column for point labels.
If NULL, points will be labeled as "Point 1", "Point 2", etc.}

\item{bandwidth}{Numeric value for kernel bandwidth in kilometers. If "auto",
optimal bandwidth is calculated automatically.}

\item{grid_size}{Integer specifying the resolution of the density grid.
Higher values give more detailed results but slower computation.}

\item{threshold}{Numeric value between 0 and 1 for hotspot detection threshold.
Points above this quantile of density values are considered hotspots.}
}
\value{
A list containing:
\itemize{
\item \code{map}: Interactive leaflet map with heatmap overlay
\item \code{hotspots}: Data.frame of identified hotspot locations
\item \code{statistics}: List of summary statistics
\item \code{density_data}: Full density grid data
}
}
\description{
Performs spatial hotspot analysis using kernel density estimation to identify
areas of high point density in geographic data. Returns an interactive map
with heatmap overlay and summary statistics.
}
\examples{
# Example 1: Using included Munich places dataset
data(munich_places)
result_munich <- find_hotspots(munich_places, "latitude", "longitude")

# View the interactive map
result_munich$map

# Check statistics
result_munich$statistics

# View top hotspots
head(result_munich$hotspots)

# Example 2: Using custom random data
set.seed(123)
sample_data <- data.frame(
  latitude = rnorm(100, mean = 48.1351, sd = 0.1),
  longitude = rnorm(100, mean = 11.5820, sd = 0.1),
  event_type = sample(c("A", "B", "C"), 100, replace = TRUE)
)

result_random <- find_hotspots(sample_data, "latitude", "longitude")
result_random$map
}
